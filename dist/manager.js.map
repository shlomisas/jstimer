{"version":3,"sources":["manager.js"],"names":["Manager","constructor","_interval","_timers","_nativeTimer","setInterval","i","length","ticker","tick","finished","splice","done","dispose","clearInterval","add","push","remove","tickerId","event"],"mappings":";;;;;AAAA;;;;AAIA,MAAMA,OAAN,CAAa;;AAMTC,kBAAa;AAAA,aAJbC,SAIa,GAJD,EAIC;AAAA,aAFbC,OAEa,GAFH,EAEG;;AACT,aAAKC,YAAL,GAAoBC,YAAY,MAAM;AAClC,iBAAI,IAAIC,IAAE,CAAV,EAAaA,IAAE,KAAKH,OAAL,CAAaI,MAA5B,EAAoCD,GAApC,EAAwC;;AAEpC,oBAAIE,SAAS,KAAKL,OAAL,CAAaG,CAAb,CAAb;;AAEAE,uBAAOC,IAAP,CAAY,KAAKP,SAAjB;;AAEA,oBAAGM,OAAOE,QAAP,EAAH,EAAqB;AACjB,yBAAKP,OAAL,CAAaQ,MAAb,CAAoBL,CAApB,EAAuB,CAAvB;AACAE,2BAAOI,IAAP;AACH;AACJ;AACJ,SAZmB,EAYjB,KAAKV,SAZY,CAApB;AAaH;;AAEDW,cAAS;;AAEL,YAAG,KAAKT,YAAR,EAAqB;AACjBU,0BAAc,KAAKV,YAAnB;AACA,iBAAKA,YAAL,GAAoB,IAApB;AACH;;AAED,aAAKD,OAAL,GAAe,EAAf;AACH;;AAED;;;;AAIAY,QAAIP,MAAJ,EAAW;AACP,eAAO,KAAKL,OAAL,CAAaa,IAAb,CAAkBR,MAAlB,IAA4B,CAAnC;AACH;;AAEDS,WAAOC,QAAP,EAAiBC,KAAjB,EAAuB;AACnB,YAAIX,SAAS,KAAKL,OAAL,CAAae,QAAb,CAAb;;AAEA,YAAGV,MAAH,EAAU;AACNA,mBAAOI,IAAP,CAAYO,KAAZ;AACH;;AAED,aAAKhB,OAAL,CAAaQ,MAAb,CAAoBO,QAApB,EAA8B,CAA9B;AACH;AAhDQ;;AAmDb;kBACe,IAAIlB,OAAJ,E","file":"manager.js","sourcesContent":["/**\r\n * Created by Shlomi\r\n */\r\n\r\nclass Manager{\r\n\r\n    _interval = 10;\r\n    _nativeTimer;\r\n    _timers = [];\r\n\r\n    constructor(){\r\n        this._nativeTimer = setInterval(() => {\r\n            for(let i=0; i<this._timers.length; i++){\r\n\r\n                let ticker = this._timers[i];\r\n\r\n                ticker.tick(this._interval);\r\n\r\n                if(ticker.finished()){\r\n                    this._timers.splice(i, 1);\r\n                    ticker.done();\r\n                }\r\n            }\r\n        }, this._interval);\r\n    }\r\n\r\n    dispose(){\r\n\r\n        if(this._nativeTimer){\r\n            clearInterval(this._nativeTimer);\r\n            this._nativeTimer = null;\r\n        }\r\n\r\n        this._timers = [];\r\n    }\r\n\r\n    /**\r\n     * Register new TimerTicker to the helper to tick it follow by its interval\r\n     * @param ticker TimerTicker\r\n     */\r\n    add(ticker){\r\n        return this._timers.push(ticker) - 1;\r\n    }\r\n\r\n    remove(tickerId, event){\r\n        let ticker = this._timers[tickerId];\r\n\r\n        if(ticker){\r\n            ticker.done(event);\r\n        }\r\n\r\n        this._timers.splice(tickerId, 1);\r\n    }\r\n}\r\n\r\n// Singleton\r\nexport default new Manager();"]}